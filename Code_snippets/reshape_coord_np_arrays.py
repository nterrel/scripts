import numpy as np

# Assuming coord is your original array
coord = np.array(
      [[-0.10379989, -0.33882424, -0.01438143],
       [-0.01750729, -0.3797008 ,  0.03897355],
       [ 0.02590523, -0.45722252, -0.0323405 ],
       [-0.05055108, -0.43206522,  0.1265365 ],
       [ 0.07843178, -0.2711886 ,  0.0816986 ],
       [ 0.08701657, -0.2365365 ,  0.20063947],
       [ 0.1528646 , -0.2218713 , -0.0170508 ],
       [ 0.13994716, -0.25469851, -0.11098625],
       [ 0.22684713, -0.10078495, -0.00353722],
       [ 0.240851  , -0.08488581,  0.10646573],
       [ 0.36293155, -0.11879232, -0.07269158],
       [ 0.3387092 , -0.13522717, -0.17339775],
       [ 0.41949067, -0.02857485, -0.06697633],
       [ 0.41425905, -0.2062606 , -0.03861427],
       [ 0.16585223,  0.02569019, -0.07247582],
       [ 0.07679884,  0.01488729, -0.15989392],
       [ 0.22671936,  0.1381415 , -0.03833814],
       [ 0.27829   ,  0.13721031,  0.05203835],
       [ 0.20289294,  0.2607014 , -0.11230949],
       [ 0.14655916,  0.32995445, -0.04762153],
       [ 0.2989131 ,  0.31667018, -0.13810417],
       [ 0.1457481 ,  0.25174305, -0.20878258]]
        )  # your original array
print('Original coordinates\n', coord)
# Flatten the array
flattened = coord.flatten()
print('Flattened coordinates:\n', flattened)
# Reshape back to the original shape by:
#  floor division (//3) of length of array
#  then 3 columns since xyz
original_shape = (len(flattened) // 3, 3)
reshaped = flattened.reshape(original_shape)

print('Reshaped coordinates:\n', reshaped)

